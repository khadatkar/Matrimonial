@model GYMONE.Models.MemberRegistrationDTO

<script src="~/Scripts/jquery-1.9.1.js"></script>
<script src="~/Scripts/jquery.min.js"></script>
<link href="~/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
<script src="~/bootstrap/js/bootstrap.min.js"></script>
<link href="~/Content/Site.css" rel="stylesheet" />

<script type="text/javascript">
    $.noConflict();
</script>

@{
    ViewBag.Title = "Edit Member Registration";
}



@if (TempData["MessageUpdate"] != null)
{
    <div class="alert alert-success" style="float: none;" role="alert">

        <b>@TempData["MessageUpdate"]</b>


    </div>
}

<style>
    input#MemImagename {
        display: none;
    }
</style>


<script type="text/javascript">
    $(document).ready(function () {


        $("#WorkouttypeID").change(function () {
            $("#PlantypeID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetPlan")',
                dataType: 'json',
                data: { WorkTypeID: $("#WorkouttypeID").val() },
                success: function (plandata) {
                    $("#PlantypeID").append('<option value="' + "0" + '">' + "Select" + '</option>');

                    $.each(plandata, function (i, plan) {
                        $("#PlantypeID").append('<option value="' + plan.PlanID + '">' + plan.PlanName + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });

</script>
<script type="text/javascript">

    $(document).ready(function () {
        $("#PlantypeID").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAmount")',
                dataType: 'json',
                data: { PlanID: $("#PlantypeID").val(), WorkTypeID: $("#WorkouttypeID").val() },
                success: function (amount) {
                    $("#Amount").val(amount);
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });


</script>


<script type="text/javascript">
    $(document).ready(function () {


        $("#countryid").change(function () {
            $("#stateid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetState")',
                dataType: 'json',
                data: { CountryId: $("#countryid").val() },
                success: function (statedata) {

                    $("#stateid").append('<option value="' + "0" + '">' + "Select State" + '</option>');

                    $.each(statedata, function (i, state) {
                        $("#stateid").append('<option value="' + state.Id + '">' + state.State + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })


    });

</script>


<script type="text/javascript">
    $(document).ready(function () {


        $("#religionid").change(function () {
            $("#casteid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCaste")',
                dataType: 'json',
                data: { ReligionId: $("#religionid").val() },
                success: function (castedata) {

                    $("#casteid").append('<option value="' + "0" + '">' + "Select Caste" + '</option>');

                    $.each(castedata, function (i, caste) {
                        $("#casteid").append('<option value="' + caste.Id + '">' + caste.Caste + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })


    });

</script>

<script type="text/javascript">
    $(document).ready(function () {


        $("#casteid").change(function () {
            $("#subcasteid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSubCaste")',
                dataType: 'json',
                data: { CasteId: $("#casteid").val() },
                success: function (SubCastedata) {

                    $("#subcasteid").append('<option value="' + "0" + '">' + "Select Caste" + '</option>');

                    $.each(SubCastedata, function (i, subcaste) {
                        $("#subcasteid").append('<option value="' + subcaste.Id + '">' + subcaste.SubCaste + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })


    });

</script>


<script type="text/javascript">
    $(document).ready(function () {


        $("#stateid").change(function () {
            $("#cityid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCity")',
                dataType: 'json',
                data: { StateId: $("#stateid").val() },
                success: function (citydata) {

                    $("#cityid").append('<option value="' + "0" + '">' + "Select City" + '</option>');

                    $.each(citydata, function (i, city) {
                        $("#cityid").append('<option value="' + city.Id + '">' + city.CityName + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })


    });

</script>



<script lang="ja" type="text/javascript">
    function ConfirmDelete() {
        var x = confirm("Are you sure you want to Update?");
        if (x) {
            return Validateform();
        }
        else {
            return false;
        }
    }




    function Validateform() {

        if ($("#MemberFName").val() == "") {
            alert("Please enter First Name");
            return false;
        }
        else if ($("#MemberMName").val() == "") {
            alert("Please enter Middle Name ");
            return false;
        }
        else if ($("#MemberLName").val() == "") {
            alert("Please enter Last Name ");
            return false;
        }
        else if ($("#JoiningDate").val() == "") {
            alert("Please select Joining Date");
            return false;
        }
        else if ($("#DOB").val() == "") {
            alert("Please select Date of Birth ");
            return false;
        }
        else if ($("#Age").val() == "") {
            alert("Please select Date of Birth ");
            return false;
        }
        else if ($("#Gender").val() == 0) {
            alert("Please Select Gender ");
            return false;
        }
        else if ($("#EmailID").val() == "") {
            alert("Please enter EmailID");
            return false;
        }
        else if ($("#WorkouttypeID").val() == 0) {
            alert("Please Select Workouttype Name ");
            return false;
        }
        else if ($("#PlantypeID").val() == 0) {
            alert("Please select PlanName");
            return false;
        }

        else {
            return true;
        }

    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        rebindPlan();
        rebindCaste();
        //$('#Gender').attr("disabled", true);
        //$('#WorkouttypeID').attr("disabled", true);
        //$('#JoiningDate').attr("disabled", true);
    });
</script>

@*---------------Rebind Plan --------------------*@
<script type="text/javascript">

    function rebindPlan() {

        if ('@ViewData["SelectedPlan"]' != null) {

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetPlan")',
                dataType: 'json',
                data: {
                    WorkTypeID: $("#WorkouttypeID").val()
                },
                success: function (plandata) {

                    $.each(plandata, function (i, plan) {
                        $("#PlantypeID").append('<option value="' + plan.PlanID + '">' + plan.PlanName + '</option>');

                        if ('@ViewData["SelectedPlan"]' != 0) {
                            $("#PlantypeID").val('@ViewData["SelectedPlan"]');
                        }

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve plan.' + ex);
                }
            });
        }


    }
</script>

@* --------------- End Of Rebind Plan ---------------- *@


@*---------------Rebind Caste --------------------*@
<script type="text/javascript">

    function rebindCaste() {
        if ('@ViewData["SelectedCaste"]' != null) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCaste")',
                dataType: 'json',
                data: { ReligionId: $("#religionid").val() },
                success: function (castedata) {

                    $("#casteid").append('<option value="' + "0" + '">' + "Select Caste" + '</option>');

                    $.each(castedata, function (i, caste) {
                        $("#casteid").append('<option value="' + caste.Id + '">' + caste.Caste + '</option>');

                        if ('@ViewData["SelectedCaste"]' != 0) {
                            $("#casteid").val('@ViewData["SelectedCaste"]');
                        }

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
        }


    }
</script>

@* --------------- End Of Rebind Caste ---------------- *@


<script type="text/javascript">

    function CalculateAge() {


        var birthday = document.getElementById("DOB").value;
        var re = /^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\d\d+$/;

        if (birthday.value != '') {

            if (re.test(birthday.value)) {
                birthdayDate = new Date(birthday.value);
                dateNow = new Date();

                var years = dateNow.getFullYear() - birthdayDate.getFullYear();
                var months = dateNow.getMonth() - birthdayDate.getMonth();
                var days = dateNow.getDate() - birthdayDate.getDate();
                if (isNaN(years)) {

                    document.getElementById('lblAge').innerHTML = '';
                    document.getElementById('lblError').innerHTML = 'Input date is incorrect!';
                    return false;

                }

                else {


                    if (months < 0 || (months == 0 && days < 0)) {
                        years = parseInt(years) - 1;
                        $("#Age").val(years);
                    }
                    else {
                        $("#Age").val(years);
                    }
                }
            }
            else {
                document.getElementById('lblError').innerHTML = 'Date must be mm/dd/yyyy format';
                return false;
            }
        }
    }
</script>




<!DOCTYPE html>

<div class="container">


    <div class="logo col-sm-12 text-center col-md-12 ">
        <img alt="" src="~/Images/shlogo.png" />
    </div>

    <div class="clearfix"></div>


    @using (Html.BeginForm("Edit", "RegisterMember", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(m => m.PaymentID)
        <fieldset>
            <legend class="legend">Edit Member Registration</legend>


            <div class="panel">

                <div class="panel-body">
                    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                    {

                        <div>
                            @Html.ActionLink("All Member Registration", "Index", "RegisterMember", new { @class = "btn btn-info btn-pressure" })
                        </div>
                    }

                    <br />

                    <div class="row">
                        <div class="col-md-2">
                            @*@Html.EditorFor(model => model.MemImagename, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.Label("Photo")
                        </div>
                        <div class="col-md-10">
                            <img src="/Images/Uploads/Members/@Model.MemID/Thumbs/@Model.MemImagename" />
                            <br />
                            <br />
                            <img id="imgpreview" src="#" />
                            <br />
                            <br />
                            <div class="col-md-10">
                                <input type="file" name="file" id="ImageUpload" />
                            </div>
                        </div>

                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.MemID)
                            @Html.DisplayNameFor(model => model.MemberFName)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.MemberFName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MemberFName)
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.MemberMName)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.MemberMName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MemberMName)
                        </div>
                    </div>
                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.MemberLName)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.MemberLName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MemberLName)
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.JoiningDate)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.JoiningDate, "{0:yyyy-MM-dd}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.JoiningDate)
                        </div>
                    </div>
                    <div style="margin-top: 5px"></div>
                    <div class="row">

                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.DOB)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.DOB)
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.Age)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.Age, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Age)
                        </div>

                    </div>
                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.Gender)
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.Gender, new SelectList(Model.Listgender, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender)
                        </div>

                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.EmailID)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EmailID)
                        </div>
                    </div>
                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @*@Html.DisplayNameFor(model => model.countryid)*@
                            @Html.DisplayName("Country")
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.countryid, new SelectList(Model.ListCountry, "Id", "Country"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.countryid)
                        </div>
                        <div class="col-md-2">
                            @*@Html.DisplayNameFor(model => model.stateid)*@
                            @Html.DisplayName("State")
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.stateid, new SelectList(Model.ListState, "Id", "State"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.stateid)
                        </div>
                    </div>
                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @*@Html.DisplayNameFor(model => model.cityid)*@
                            @Html.DisplayName("City")
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.cityid, new SelectList(Model.ListCity, "Id", "CityName"), new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.cityid)
                        </div>
                        <div class="col-md-2">
                            @*@Html.DisplayNameFor(model => model.stateid)*@
                        </div>
                        <div class="col-md-3">
                            @*@Html.DropDownListFor(m =>m.stateid, new SelectList(Model.ListState, "Id", "State"),  new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.stateid)*@
                        </div>
                    </div>
                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayName("Religion")
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.religionid, new SelectList(Model.ListReligion, "Id", "Religion"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.religionid)
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayName("Caste")
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.casteid, new SelectList(Model.ListCaste, "Id", "Caste"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.casteid)
                        </div>
                    </div>
                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @*@Html.DisplayNameFor(model => model.cityid)*@
                            @Html.DisplayName("Sub Caste")
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.subcasteid, new SelectList(Model.ListSubCaste, "Id", "SubCaste"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.subcasteid)
                        </div>
                        <div class="col-md-2">
                            @*@Html.DisplayNameFor(model => model.stateid)*@
                        </div>
                        <div class="col-md-3">
                            @*@Html.DropDownListFor(m =>m.stateid, new SelectList(Model.ListState, "Id", "State"),  new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.stateid)*@
                        </div>
                    </div>
                    <div style="margin-top: 5px"></div>
                    <div style="margin-top: 5px"></div>
                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @*@Html.DisplayNameFor(model => model.WorkouttypeID)*@
                            @Html.DisplayName("Scheme")
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.WorkouttypeID, new SelectList(Model.ListScheme, "SchemeID", "SchemeName"), new { @class = "form-control", @readonly = true })

                            @Html.ValidationMessageFor(model => model.WorkouttypeID)
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.PlantypeID)
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("PlantypeID", new SelectList(string.Empty, "PlanID", "PlanName"), "Select", new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.PlantypeID)
                        </div>
                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">

                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.Amount)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => Model.Amount, new { @class = "form-control", @readonly = true })
                        </div>
                        <div class="col-md-3">
                        </div>
                        <div class="col-md-3">
                        </div>
                    </div>

                    <hr />

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.Contactno)
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => Model.Contactno, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.Address)
                        </div>
                        <div class="col-md-3">
                            @Html.TextAreaFor(model => Model.Address, new { @class = "form-control" })
                        </div>
                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.Feet)
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.Feet,
                           new List<SelectListItem>
                            {
                                new SelectListItem { Text = "2", Value="2" },
                                new SelectListItem { Text = "3", Value="3" },
                                new SelectListItem { Text = "4", Value="4" },
                                new SelectListItem { Text = "5", Value="5" },
                                new SelectListItem { Text = "6", Value="6" },
                                new SelectListItem { Text = "7", Value="7" },
                                new SelectListItem { Text = "8", Value="8" },
                                new SelectListItem { Text = "9", Value="9" },
                                new SelectListItem { Text = "10", Value="10" },
                                new SelectListItem { Text = "11", Value="11" },
                                new SelectListItem { Text = "12", Value="12" }
                            }, "Select Feet", new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.Inches)
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.Inches, new List<SelectListItem>
                            {
                                new SelectListItem { Text = "0", Value="0" },
                                new SelectListItem { Text = "1", Value="1" },
                                new SelectListItem { Text = "2", Value="2" },
                                new SelectListItem { Text = "3", Value="3" },
                                new SelectListItem { Text = "4", Value="4" },
                                new SelectListItem { Text = "5", Value="5" },
                                new SelectListItem { Text = "6", Value="6" },
                                new SelectListItem { Text = "7", Value="7" },
                                new SelectListItem { Text = "8", Value="8" },
                                new SelectListItem { Text = "9", Value="9" },
                                new SelectListItem { Text = "10", Value="10" },
                                new SelectListItem { Text = "11", Value="11" },
                                new SelectListItem { Text = "12", Value="12" }
                                
                            }, "Select Inches", new { @class = "form-control" })
                        </div>
                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.Weight)
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.Weight, new List<SelectListItem>
                            {
                                new SelectListItem { Text = "40", Value="40" },
                                new SelectListItem { Text = "41", Value="41" },
                                new SelectListItem { Text = "42", Value="42" },
                                new SelectListItem { Text = "43", Value="43" },
                                new SelectListItem { Text = "44", Value="44" },
                                new SelectListItem { Text = "45", Value="45" },
                                new SelectListItem { Text = "46", Value="46" },
                                new SelectListItem { Text = "47", Value="47" },
                                new SelectListItem { Text = "48", Value="48" },
                                new SelectListItem { Text = "49", Value="49" },
                                new SelectListItem { Text = "50", Value="50" },
                                
                                new SelectListItem { Text = "51", Value="51" },
                                new SelectListItem { Text = "52", Value="52" },
                                new SelectListItem { Text = "53", Value="53" },
                                new SelectListItem { Text = "54", Value="54" },
                                new SelectListItem { Text = "55", Value="55" },
                                new SelectListItem { Text = "56", Value="56" },
                                new SelectListItem { Text = "57", Value="57" },
                                new SelectListItem { Text = "58", Value="58" },
                                new SelectListItem { Text = "59", Value="59" },
                                new SelectListItem { Text = "60", Value="60" },
                                
                                new SelectListItem { Text = "61", Value="61" },
                                new SelectListItem { Text = "62", Value="62" },
                                new SelectListItem { Text = "63", Value="63" },
                                new SelectListItem { Text = "64", Value="64" },
                                new SelectListItem { Text = "65", Value="65" },
                                new SelectListItem { Text = "66", Value="66" },
                                new SelectListItem { Text = "67", Value="67" },
                                new SelectListItem { Text = "68", Value="68" },
                                new SelectListItem { Text = "69", Value="69" },
                                new SelectListItem { Text = "70", Value="70" },
                                
                                new SelectListItem { Text = "71", Value="71" },
                                new SelectListItem { Text = "72", Value="72" },
                                new SelectListItem { Text = "73", Value="73" },
                                new SelectListItem { Text = "74", Value="74" },
                                new SelectListItem { Text = "75", Value="75" },
                                new SelectListItem { Text = "76", Value="76" },
                                new SelectListItem { Text = "77", Value="77" },
                                new SelectListItem { Text = "78", Value="78" },
                                new SelectListItem { Text = "79", Value="79" },
                                new SelectListItem { Text = "80", Value="80" },
                                
                                new SelectListItem { Text = "81", Value="81" },
                                new SelectListItem { Text = "82", Value="82" },
                                new SelectListItem { Text = "83", Value="83" },
                                new SelectListItem { Text = "84", Value="84" },
                                new SelectListItem { Text = "85", Value="85" },
                                new SelectListItem { Text = "86", Value="86" },
                                new SelectListItem { Text = "87", Value="87" },
                                new SelectListItem { Text = "88", Value="88" },
                                new SelectListItem { Text = "89", Value="89" },
                                new SelectListItem { Text = "90", Value="90" },
                                
                                new SelectListItem { Text = "91", Value="91" },
                                new SelectListItem { Text = "92", Value="92" },
                                new SelectListItem { Text = "93", Value="93" },
                                new SelectListItem { Text = "94", Value="94" },
                                new SelectListItem { Text = "95", Value="95" },
                                new SelectListItem { Text = "96", Value="96" },
                                new SelectListItem { Text = "97", Value="97" },
                                new SelectListItem { Text = "98", Value="98" },
                                new SelectListItem { Text = "99", Value="99" },
                                new SelectListItem { Text = "100", Value="100" },
                                
                                
                                
                                new SelectListItem { Text = "101", Value="101" },
                                new SelectListItem { Text = "102", Value="102" },
                                new SelectListItem { Text = "103", Value="103" },
                                new SelectListItem { Text = "104", Value="104" },
                                new SelectListItem { Text = "105", Value="105" }
                                
                            }, "Select Weight", new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayNameFor(model => model.color)
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.color,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Fair", Value="Fair" },
                                new SelectListItem { Text = "Medium", Value="Medium" },
                                new SelectListItem { Text = "Dark", Value="Dark" }
                            },"Select Color", new { @class = "form-control" })
                        </div>
                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayName("Marital Status")
                            @*@Html.DisplayNameFor(model => model.marritalmemberstatus)*@
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.marritalmemberstatus,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Single", Value="Single" },
                                new SelectListItem { Text = "Married", Value="Married" },
                                new SelectListItem { Text = "Divorce", Value="Divorce" },
                                new SelectListItem { Text = "Widow", Value="Widow" }
                            },"Select Marital Status", new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayName("Any Disability")
                        </div>
                        <div class="col-md-3">
                             @Html.DropDownListFor(model=>model.AnyDisability,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "No", Value="No" },
                                new SelectListItem { Text = "Physical Disability", Value="Physical Disability" }
                            }, new { @class = "form-control" })
                        </div>
                    </div>

                     <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayName("Father Status")
                            @*@Html.DisplayNameFor(model => model.marritalmemberstatus)*@
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.fatherstatus,new SelectList(Model.ListFatherStatus, "Value", "Text"), new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayName("Mother Name")
                        </div>
                        <div class="col-md-3">
                             @Html.TextBoxFor(model => Model.mothername, new { @class = "form-control" })
                        </div>
                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayName("Mother Status")
                            @*@Html.DisplayNameFor(model => model.marritalmemberstatus)*@
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.motherstatus,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Employed", Value="Employed" },
                                new SelectListItem { Text = "Business", Value="Business" },
                                new SelectListItem { Text = "Retired", Value="Retired" },
                                new SelectListItem { Text = "Homemaker", Value="Homemaker" },
                                new SelectListItem { Text = "Passed Away", Value="Passed Away" }
                            },"Select Mother Status", new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayName("No Of Brothers")
                        </div>
                        <div class="col-md-3">
                             @Html.DropDownListFor(model=>model.noofbrothers,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "0", Value="0" },
                                new SelectListItem { Text = "1", Value="1" },
                                new SelectListItem { Text = "2", Value="2" },
                                new SelectListItem { Text = "3", Value="3" },
                                new SelectListItem { Text = "4", Value="4" },
                                new SelectListItem { Text = "5", Value="5" },
                                new SelectListItem { Text = "6", Value="6" },
                                new SelectListItem { Text = "7", Value="7" },
                                new SelectListItem { Text = "8", Value="8" },
                                new SelectListItem { Text = "9", Value="9" },
                                new SelectListItem { Text = "10", Value="10" },
                                new SelectListItem { Text = "11", Value="11" }
                            },"Select", new { @class = "form-control" })
                        </div>
                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayName("Married Brother")
                            @*@Html.DisplayNameFor(model => model.marritalmemberstatus)*@
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.marriedbrother,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "0", Value="0" },
                                new SelectListItem { Text = "1", Value="1" },
                                new SelectListItem { Text = "2", Value="2" },
                                new SelectListItem { Text = "3", Value="3" },
                                new SelectListItem { Text = "4", Value="4" },
                                new SelectListItem { Text = "5", Value="5" },
                                new SelectListItem { Text = "6", Value="6" },
                                new SelectListItem { Text = "7", Value="7" },
                                new SelectListItem { Text = "8", Value="8" },
                                new SelectListItem { Text = "9", Value="9" },
                                new SelectListItem { Text = "10", Value="10" },
                                new SelectListItem { Text = "11", Value="11" }
                            },"Select", new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayName("No Of Sisters")
                        </div>
                        <div class="col-md-3">
                             @Html.DropDownListFor(model=>model.noofsisters,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "0", Value="0" },
                                new SelectListItem { Text = "1", Value="1" },
                                new SelectListItem { Text = "2", Value="2" },
                                new SelectListItem { Text = "3", Value="3" },
                                new SelectListItem { Text = "4", Value="4" },
                                new SelectListItem { Text = "5", Value="5" },
                                new SelectListItem { Text = "6", Value="6" },
                                new SelectListItem { Text = "7", Value="7" },
                                new SelectListItem { Text = "8", Value="8" },
                                new SelectListItem { Text = "9", Value="9" },
                                new SelectListItem { Text = "10", Value="10" },
                                new SelectListItem { Text = "11", Value="11" }
                            },"Select", new { @class = "form-control" })
                        </div>
                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayName("Married Sister")
                            @*@Html.DisplayNameFor(model => model.marritalmemberstatus)*@
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model=>model.marriedsisters,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "0", Value="0" },
                                new SelectListItem { Text = "1", Value="1" },
                                new SelectListItem { Text = "2", Value="2" },
                                new SelectListItem { Text = "3", Value="3" },
                                new SelectListItem { Text = "4", Value="4" },
                                new SelectListItem { Text = "5", Value="5" },
                                new SelectListItem { Text = "6", Value="6" },
                                new SelectListItem { Text = "7", Value="7" },
                                new SelectListItem { Text = "8", Value="8" },
                                new SelectListItem { Text = "9", Value="9" },
                                new SelectListItem { Text = "10", Value="10" },
                                new SelectListItem { Text = "11", Value="11" }
                            },"Select", new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayName("Highest Qualification")
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.highestqualification, Model.ListQualification, "Select Highest Qualification", new { @class = "form-control" } )
                            @Html.ValidationMessageFor(model => model.highestqualification, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayName("Enter Job Details")
                            @*@Html.DisplayNameFor(model => model.marritalmemberstatus)*@
                        </div>
                        <div class="col-md-3">
                            @Html.TextAreaFor(model => Model.otherqualification, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayName("Diet")
                        </div>
                        <div class="col-md-3">
                             @Html.DropDownListFor(model=>model.diet,new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Veg", Value="Veg" },
                                new SelectListItem { Text = "Non-Veg", Value="Non-Veg" },
                                new SelectListItem { Text = "Occasionally Non-Veg", Value="Occasionally Non-Veg" },
                                new SelectListItem { Text = "Eggetarian", Value="Eggetarian" },
                                new SelectListItem { Text = "Jain", Value="Jain" },
                                new SelectListItem { Text = "Vegan", Value="Vegan" }
                            },"Select", new { @class = "form-control" })
                        </div>
                    </div>
                    

                    <div style="margin-top: 5px"></div>
                    <div class="row">
                        <div class="col-md-12">
                            <input id="Submit" class="btn btn-success" name="actionType" onclick="return ConfirmDelete();" type="submit" value="Update" />
                            <input id="Cancel" class="btn btn-success" type="submit" name="actionType" value="Cancel" />
                        </div>
                    </div>
                    <div style="margin-top: 5px"></div>
                </div>
            </div>

        </fieldset>

    }



</div>

<hr />

@if (!Model.GalleryImages.Any())
{
    <h3>There are no gallery images for this Member.</h3>
}

<form action="/RegisterMember/SaveGalleryImages" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
    <div class="fallback">
        <input type="file" name="file" multiple />
        <input type="submit" value="Upload" />
    </div>
</form>

<br />
<br />

@foreach (var image in Model.GalleryImages)
{
    <div style="display: inline-block; margin-right: 15px;">
        <img src="/Images/Uploads/Members/@Model.MemID/Gallery/Thumbs/@image" />
        @Html.ActionLink("delete", "DeleteImage", "RegisterMember", new { @class = "deleteimage", data_name = image })
    </div>
}
<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />



@Styles.Render("~/Content/themes/base/css")
@section Scripts {

    <script src="~/Scripts/jquery-ui.js"></script>

    <script src="~/Scripts/dropzone/dropzone.js"></script>
    @* Start ImageData *@

    /*
    * Preview selected image
    */
    <script type="text/javascript">
        $(function () {

            /*
            * Preview selected image
            */

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#imgpreview")
                            .attr("src", e.target.result)
                            .width(200)
                            .height(200);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#ImageUpload").change(function () {
                readURL(this);
            });

            //////////////////////////////////////////////////////////////

            /*
            * Dropzone js
            */

            Dropzone.options.dropzoneForm = {
                acceptedFiles: "image/*",
                init: function() {
                    this.on("complete", function (file) {
                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                            location.reload();
                        }
                    });

                    this.on("sending", function (file, xhr, formData) {
                        formData.append("id", @Model.MemID);
            });
        }
    };

            //////////////////////////////////////////////////////////////

            /*
            * Dropzone js
            */

            $("a.deleteimage").click(function (e) {
                e.preventDefault();

                if (!confirm("Confirm deletion")) return false;

                var $this = $(this);
                var url = "/RegisterMember/DeleteImage";
                var imageName = $this.data("name");

                $.post(url, { id: @Model.MemID, imageName: imageName }, function(data) {
            $this.parent().fadeOut("fast");
        });

    });

            //////////////////////////////////////////////////////////////


        });
    </script>
    @* End ImageData *@


    <script type="text/javascript">
        $(document).ready(function () {
            $("#JoiningDate").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: 'yy-mm-dd'
            });
        });
    </script>

    <script type="text/javascript">


        var d = new Date();
        $('#DOB').datepicker({


            changeMonth: true,
            changeYear: true,
            changeday: true,
            dateFormat: "yy-mm-dd",
            yearRange: "1980:2025",
            onSelect: function (selectedDate, ev) {
                CalculateAge(selectedDate);
            }
        });

        function CalculateAge(selectedDate) {

            var x = selectedDate.split('-');
            var curYear = new Date().getUTCFullYear();
            var age = curYear - x[0];
            $('#Age').val(age);
        }
    </script>
}
